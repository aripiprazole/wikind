use Kind.Error as Error
use Kind.Error.Quoted as Quoted
use Kind.Context as Context
use Kind.Term as Term

Error/quote (err: (Kind.Error)) (sub: (Kind.Subst)) : Error/Quoted
Error/quote (Error/unbound_variable ctx orig) sub = (Quoted/unbound_variable (Context/quote ctx sub) orig)
Error/quote (Error/cant_infer_hole ctx orig) sub = (Quoted/cant_infer_hole (Context/quote ctx sub) orig)
Error/quote (Error/cant_infer_lambda ctx orig) sub = (Quoted/cant_infer_lambda (Context/quote ctx sub) orig)
Error/quote (Error/invalid_call ctx orig) sub = (Quoted/invalid_call (Context/quote ctx sub) orig)
Error/quote (Error/impossible_case ctx orig typ term) sub = (Quoted/impossible_case (Context/quote ctx sub) orig (Term/quote typ sub) (Term/quote term sub))
Error/quote (Error/inspection ctx orig term) sub = (Quoted/inspection (Context/quote ctx sub) orig (Term/quote term sub))
Error/quote (Error/too_many_arguments ctx orig) sub = (Quoted/too_many_arguments (Context/quote ctx sub) orig)
Error/quote (Error/type_mismatch ctx orig expected detected) sub = (Quoted/type_mismatch (Context/quote ctx sub) orig (Term/quote expected sub) (Term/quote detected sub))
Error/quote (Error/uncovered_pattern ctx orig res) sub = (Quoted/uncovered_pattern (Context/quote ctx sub) orig res)
