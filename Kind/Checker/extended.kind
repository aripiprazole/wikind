use Kind.Checker as Checker
use Kind.Result as Result

// Extends the context and the checker and then shrink it after the operation.
Checker/extended <a> (checker: Kind.Checker a) (name: U60) (type: Kind.Term) (vals: List Kind.Term) : Kind.Checker a
Checker/extended a checker name type vals =
  do Kind.Checker {
    Checker/extend name type vals
    ask got = checker
    Checker/shrink
    return got
  }
