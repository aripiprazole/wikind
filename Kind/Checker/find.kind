use Kind.Checker as Checker
use Kind.Context as Context
use Kind.Result as Result

// Tries to find an index inside the context and then applies the function 'fun'
// to it or 'alt' if there is not an element with this index.
Checker/find <r> (index: U60) (alt: r) (fun: U60 -> Kind.Term -> (List Kind.Term) -> r) : Kind.Checker r
Checker/find r index alt fun = context => depth => rhs => subst => eqts => errs =>
  Result/checked context depth rhs subst eqts errs (Context/find context index alt fun)
